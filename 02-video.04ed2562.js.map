{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,UAChCC,EAAS,IAAIC,MAAMC,OAAOL,GAMhCG,EAAOG,GAAG,aAAcC,UAHL,SAAUC,GAC3BC,aAAaC,QAHF,2BAGgBC,KAAKC,UAAUJ,G,GAEC,MAE7C,IACE,MAAMK,EAAaF,KAAKG,MAAML,aAAaC,QARhC,6BASXP,EACGY,eAAeC,UAAUC,SACzBC,MAAK,SAAUC,GACRN,EAAWM,G,IAElBC,OAAM,SAAUC,GACf,GACO,eADCA,EAAMC,KAEVT,EAAWM,IAAM,IAAKN,EAAWM,IAAMN,EAAWU,S,IAI1D,MAAOF,GACPA,EAAMC,KACND,EAAMG,O","sources":["src/js/02-video.js"],"sourcesContent":["const iframe = document.querySelector('iframe');\nconst player = new Vimeo.Player(iframe);\nconst time = 'videoplayer-current-time';\n\nconst playHandle = function (data) {\n  localStorage.getItem(time, JSON.stringify(data));\n};\nplayer.on('timeUpdate', throttle(playHandle, 1000));\n\ntry {\n  const dataParced = JSON.parse(localStorage.getItem(time));\n  player\n    .setCurrentTime(parceData.seconds)\n    .then(function (sec) {\n      sec = dataParced.sec;\n    })\n    .catch(function (error) {\n      switch (error.name) {\n        case 'RangeError':\n          dataParced.sec < 0 || dataParced.sec > dataParced.duration;\n          break;\n      }\n    });\n} catch (error) {\n  error.name;\n  error.message;\n}\n"],"names":["$c006019e0678fe87$var$iframe","document","querySelector","$c006019e0678fe87$var$player","Vimeo","Player","on","throttle","data","localStorage","getItem","JSON","stringify","dataParced","parse","setCurrentTime","parceData","seconds","then","sec","catch","error","name","duration","message"],"version":3,"file":"02-video.04ed2562.js.map"}